@page "/"
@using PilaBlazor.Services
@using System.Collections.Generic;

<PageTitle>Conversor</PageTitle>


<h1>Conversor Infijo - Posfijo</h1>

<div class="row" style="margin-bottom:10px">
    <div class="col-6">
        <input type="text" class="form-control" placeholder="Ingrese la expresión infija" @bind="infijo" />
    </div>
   
        <div class="col-6 form-group">
        @if (@posfijo == "")
        {
            <button class="btn btn-primary" style="margin-left:5px;" @onclick="Push">Convertir</button>
            <button class="btn btn-primary" style="margin-left:5px;" @onclick="Evaluar" disabled>Operar</button>
        } else {
            <button class="btn btn-primary" style="margin-left:5px;" @onclick="Push" disabled>Convertir</button>
            <button class="btn btn-primary" style="margin-left:5px;" @onclick="Evaluar">Operar</button>
        }

        <button class="btn btn-danger" style="margin-left:5px;" @onclick="Limpiar">Limpiar</button>
    </div>
</div>
<div class="col">
    <table class="table table-bordered table-striped table-hover">
        <thead class="table-dark text-center">
            <tr>
                <th>RESULTADO</th>
            </tr>
        </thead>
        <tbody>
            @if (resultado != 0)
            {
                <tr>
                    <td>@resultado</td>
                </tr>
            }
            else
            {
                <tr>
                    <td>@posfijo</td>
                </tr>
            }

        </tbody>
    </table>
</div>


@code {


    string infijo;
    string posfijo;
    double resultado;
    Stack<string> pila;

    protected override void OnInitialized()
    {
        pila = new Stack<string>();
        infijo = "";
        posfijo = "";
        pila.Clear();
        resultado = 0;
    }

    private void Push()
    {
        infijo = infijo.Trim();
        if (infijo == "") return;
        for (int i = 0; i < infijo.Length; i++)
        {
            char valor = infijo[i];

            if (char.IsDigit(valor))
            {
                posfijo += valor;
            }
            else if (valor == '(')
            {
                pila.Push(valor.ToString());
            }
            else if (valor == ')')
            {
                while (pila.Count > 0 && pila.Peek() != "(")
                {
                    posfijo += pila.Pop();
                }

                if (pila.Count > 0) pila.Pop();
            }
            else if (valor == '*' || valor == '/' || valor == '+' || valor == '-' || valor == '^')
            {
                int operador = Pila.Prioridad(valor.ToString());

                while (pila.Count > 0 && Pila.Prioridad(pila.Peek()) >= operador)
                {
                    posfijo += pila.Pop();
                }

                pila.Push(valor.ToString());
            }
        }

        while (pila.Count > 0)
        {
            posfijo += pila.Pop();
        }


        }


        public void Evaluar(){
           resultado =  (Pila.EvaluarPostfija(posfijo));
        }

    public void Limpiar()
    {
        infijo = "";
        posfijo = "";
        pila.Clear();
        resultado = 0;
    }



}